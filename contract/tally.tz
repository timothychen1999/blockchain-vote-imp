{ parameter
    (or (pair %finalize (nat %result) (nat %proof))
        (or (pair %init
               (pair %rsa_key (nat %n) (nat %v))
               (pair %va_key (nat %n) (nat %v))
               (nat %n)
               (nat %r)
               (nat %y))
            (or (pair %vote (nat %v) (nat %mask) (nat %mask_inv) (nat %ballot_sig))
                (or (pair %set_rsa_key (nat %n) (nat %v)) (nat %set_n))))) ;
  storage
    (pair (address %admin)
          (pair %rsa_key (nat %n) (nat %v))
          (pair %va_key (nat %n) (nat %v))
          (nat %vote_state)
          (nat %vote_count)
          (nat %n)
          (nat %r)
          (nat %y)
          (or %status (unit %uninitialized) (or (unit %started) (unit %finished)))
          (nat %result)
          (big_map %used_ballot nat unit)) ;
  code { LAMBDA
           (pair nat nat nat)
           nat
           { UNPAIR 3 ;
             PUSH nat 1 ;
             DUG 3 ;
             PAIR 4 ;
             LEFT nat ;
             LOOP_LEFT
               { UNPAIR 4 ;
                 PUSH nat 0 ;
                 DUP 3 ;
                 COMPARE ;
                 EQ ;
                 IF { DROP 3 ; RIGHT (pair nat nat nat nat) }
                    { PUSH nat 0 ;
                      PUSH nat 2 ;
                      DUP 4 ;
                      EDIV ;
                      IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                      CDR ;
                      COMPARE ;
                      EQ ;
                      IF { DIG 3 ;
                           DUP 4 ;
                           PUSH nat 2 ;
                           DIG 4 ;
                           EDIV ;
                           IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                           CAR ;
                           DIG 4 ;
                           DUP 5 ;
                           DIG 5 ;
                           MUL ;
                           EDIV ;
                           IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                           CDR }
                         { DUP 3 ;
                           DUP 2 ;
                           DIG 5 ;
                           MUL ;
                           EDIV ;
                           IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                           CDR ;
                           DUP 4 ;
                           PUSH nat 2 ;
                           DIG 4 ;
                           EDIV ;
                           IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                           CAR ;
                           DIG 4 ;
                           DUP 5 ;
                           DIG 5 ;
                           MUL ;
                           EDIV ;
                           IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                           CDR } ;
                      PAIR 4 ;
                      LEFT nat } } } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { UNIT ;
             LEFT unit ;
             RIGHT unit ;
             DUP 3 ;
             GET 17 ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Vote must be initialized" ; FAILWITH } {} ;
             DUP 2 ;
             GET 7 ;
             DUP 3 ;
             GET 11 ;
             DUP 4 ;
             GET 11 ;
             DUP 4 ;
             CAR ;
             DUP 6 ;
             GET 15 ;
             PAIR 3 ;
             DUP 6 ;
             SWAP ;
             EXEC ;
             DUP 5 ;
             GET 11 ;
             DUP 6 ;
             GET 13 ;
             DUP 6 ;
             CDR ;
             PAIR 3 ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
             CDR ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Invalid result" ; FAILWITH } {} ;
             SWAP ;
             UNIT ;
             RIGHT unit ;
             RIGHT unit ;
             UPDATE 17 ;
             SWAP ;
             CAR ;
             UPDATE 19 }
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 SOURCE ;
                 DUP 3 ;
                 CAR ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Only admin can initialize the vote" ; FAILWITH } {} ;
                 SWAP ;
                 UNIT ;
                 LEFT unit ;
                 RIGHT unit ;
                 UPDATE 17 ;
                 PUSH nat 0 ;
                 UPDATE 9 ;
                 PUSH nat 1 ;
                 UPDATE 7 ;
                 DUP 2 ;
                 CAR ;
                 UPDATE 3 ;
                 DUP 2 ;
                 GET 5 ;
                 UPDATE 11 ;
                 DUP 2 ;
                 GET 7 ;
                 UPDATE 13 ;
                 SWAP ;
                 GET 8 ;
                 UPDATE 15 ;
                 EMPTY_BIG_MAP nat unit ;
                 UPDATE 20 }
               { IF_LEFT
                   { UNIT ;
                     LEFT unit ;
                     RIGHT unit ;
                     DUP 3 ;
                     GET 17 ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "Vote must be initialized" ; FAILWITH } {} ;
                     DUP 2 ;
                     GET 20 ;
                     DUP 2 ;
                     CAR ;
                     MEM ;
                     IF { PUSH string "Vote duplicate" ; FAILWITH }
                        { DUP 2 ; GET 20 ; UNIT ; SOME ; DUP 3 ; CAR ; UPDATE } ;
                     DUP 3 ;
                     GET 5 ;
                     PUSH bytes
                          0x
                     DUP 4 ;
                     CAR ;
                     BYTES ;
                     XOR ;
                     PUSH nat 512 ;
                     DUP 2 ;
                     SIZE ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "Invalid ballot length" ; FAILWITH } {} ;
                     SHA256 ;
                     PUSH bytes 0x003031300d060960864801650304020105000420 ;
                     CONCAT ;
                     NAT ;
                     DUP 2 ;
                     CAR ;
                     DIG 2 ;
                     CDR ;
                     DUP 5 ;
                     GET 6 ;
                     PAIR 3 ;
                     DUP 6 ;
                     SWAP ;
                     EXEC ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "Invalid signature" ; FAILWITH } {} ;
                     DUP 3 ;
                     GET 3 ;
                     CAR ;
                     DUP 3 ;
                     GET 5 ;
                     DUP 4 ;
                     CAR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                     CDR ;
                     DUP 4 ;
                     GET 3 ;
                     CAR ;
                     DUP 5 ;
                     GET 3 ;
                     CDR ;
                     DIG 2 ;
                     PAIR 3 ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     PUSH bytes
                          0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ;
                     SWAP ;
                     BYTES ;
                     XOR ;
                     PUSH nat 160 ;
                     DUP 2 ;
                     SIZE ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "Invalid length" ; FAILWITH } {} ;
                     DUP ;
                     PUSH nat 128 ;
                     PUSH nat 0 ;
                     SLICE ;
                     IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
                     SWAP ;
                     PUSH nat 32 ;
                     PUSH nat 128 ;
                     SLICE ;
                     IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
                     DUP 2 ;
                     NAT ;
                     PAIR ;
                     PUSH bytes
                          0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ;
                     DUP 5 ;
                     GET 3 ;
                     BYTES ;
                     XOR ;
                     DIG 2 ;
                     CONCAT ;
                     SHA256 ;
                     DUP 2 ;
                     CDR ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "Invalid vote hash" ; FAILWITH } {} ;
                     PUSH nat 1 ;
                     DUP 5 ;
                     GET 3 ;
                     CAR ;
                     DUP 5 ;
                     GET 5 ;
                     DIG 5 ;
                     GET 3 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                     CDR ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "Invalid vote format" ; FAILWITH } {} ;
                     CAR ;
                     PUSH nat 0 ;
                     DUP 4 ;
                     GET 9 ;
                     COMPARE ;
                     EQ ;
                     IF { DUP 3 ;
                          GET 11 ;
                          DUP 2 ;
                          EDIV ;
                          IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                          CDR }
                        { DUP 3 ;
                          GET 11 ;
                          DUP 2 ;
                          DUP 5 ;
                          GET 7 ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                          CDR } ;
                     PUSH nat 0 ;
                     DIG 2 ;
                     COMPARE ;
                     EQ ;
                     IF { DROP 2 ; DUP ; GET 9 ; UPDATE 9 }
                        { DUP 3 ;
                          SWAP ;
                          UPDATE 7 ;
                          PUSH nat 1 ;
                          DIG 3 ;
                          GET 9 ;
                          ADD ;
                          UPDATE 9 ;
                          SWAP ;
                          UPDATE 20 } }
                   { DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { UPDATE 3 }
                       { PUSH nat 1 ;
                         DUP 2 ;
                         COMPARE ;
                         LE ;
                         IF { PUSH string "n must be greater than 1" ; FAILWITH } {} ;
                         UPDATE 11 } } } } ;
         NIL operation ;
         PAIR } ;
  view "get_result"
       unit
       nat
       { CDR ;
         UNIT ;
         RIGHT unit ;
         RIGHT unit ;
         DUP 2 ;
         GET 17 ;
         COMPARE ;
         NEQ ;
         IF { PUSH string "Vote must be finished" ; FAILWITH } {} ;
         GET 19 } }

